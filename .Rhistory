c9 <- ggplot(df_MBC, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=Proportion_emp_est)) + geom_point() + geom_smooth() + labs(y="Proportion of Employees", x="Successful Interventions")
c10 <- ggplot(df_NUA, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=Proportion_emp_est)) + geom_point() + geom_smooth() + labs(y="Proportion of Employees", x="Successful Interventions")
c11 <- ggplot(df_UA, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=Proportion_emp_est)) + geom_point() + geom_smooth() + labs(y="Proportion of Employees", x="Successful Interventions")
c12 <- ggplot(df_WUA, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=Proportion_emp_est)) + geom_point() + geom_smooth() + labs(y="Proportion of Employees", x="Successful Interventions")
grid.arrange(c6,c7,c8,c9,c10,c11,nrow=3,top = "Propption of Employee at Each Local Authority")
c7 <- ggplot(df_DC, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=Proportion_emp_est)) + geom_point() + geom_smooth() + labs(y="Proportion of Employees", x="Successful Interventions DC")
c8 <- ggplot(df_LB, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=Proportion_emp_est)) + geom_point() + geom_smooth() + labs(y="Proportion of Employees", x="Successful Interventions LB")
c9 <- ggplot(df_MBC, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=Proportion_emp_est)) + geom_point() + geom_smooth() + labs(y="Proportion of Employees", x="Successful Interventions MBC")
c10 <- ggplot(df_NUA, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=Proportion_emp_est)) + geom_point() + geom_smooth() + labs(y="Proportion of Employees", x="Successful Interventions NUA")
c11 <- ggplot(df_UA, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=Proportion_emp_est)) + geom_point() + geom_smooth() + labs(y="Proportion of Employees", x="Successful Interventions UA")
c12 <- ggplot(df_WUA, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=Proportion_emp_est)) + geom_point() + geom_smooth() + labs(y="Proportion of Employees", x="Successful Interventions WUA")
grid.arrange(c7,c8,c9,c10,c11,c12,nrow=3,top = "Propption of Employee at Each Local Authority")
c7 <- ggplot(df_DC, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=Proportion_emp_est)) + geom_point() + geom_smooth() + labs(y="Proportion", x="Successful Interventions DC")
c8 <- ggplot(df_LB, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=Proportion_emp_est)) + geom_point() + geom_smooth() + labs(y="Proportion", x="Successful Interventions LB")
c9 <- ggplot(df_MBC, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=Proportion_emp_est)) + geom_point() + geom_smooth() + labs(y="Proportion", x="Successful Interventions MBC")
c10 <- ggplot(df_NUA, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=Proportion_emp_est)) + geom_point() + geom_smooth() + labs(y="Proportion", x="Successful Interventions NUA")
c11 <- ggplot(df_UA, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=Proportion_emp_est)) + geom_point() + geom_smooth() + labs(y="Proportion", x="Successful Interventions UA")
c12 <- ggplot(df_WUA, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=Proportion_emp_est)) + geom_point() + geom_smooth() + labs(y="Proportion", x="Successful Interventions WUA")
grid.arrange(c7,c8,c9,c10,c11,c12,nrow=3,top = "Propption of Employee at Each Local Authority")
D3 <- df
D3$Country <- as.factor(D3$Country)
D3$LAType <- as.factor(D3$LAType)
Inve <- D3 %>%  group_by(Country,LAType)%>%
dplyr::summarise(  Voluntaryclosure = sum(`Totalnumberofestablishmentssubjecttoformalenforcementactions-Voluntaryclosure`), Seizure = sum(`Totalnumberofestablishmentssubjecttoformalenforcementactions-Seizure,detention&surrenderoffood`),
Suspension = sum(`Totalnumberofestablishmentssubjecttoformalenforcementactions-Suspension/revocationofapprovalorlicence`),
Hygieneemergencyprohibitionnotice=sum(`Totalnumberofestablishmentssubjecttoformalenforcementactions-Hygieneemergencyprohibitionnotice`),
Prohibitionorder=sum(`Totalnumberofestablishmentssubjecttoformalenforcementactions-Prohibitionorder`),
Simplecaution=sum(`Totalnumberofestablishmentssubjecttoformalenforcementactions-Simplecaution`),
Hygieneimprovementnotices=sum(`Totalnumberofestablishmentssubjecttoformalenforcementactions-Hygieneimprovementnotices`),
Remedialaction=sum(`Totalnumberofestablishmentssubjecttoformalenforcementactions-Remedialaction&detentionnotices`),
Writtenwarnings=sum( `TotalnumberofestablishmentssubjecttoWrittenwarnings`),
Prosecutionsconcluded=sum(`Totalnumberofestablishmentssubjecttoformalenforcementactions-Prosecutionsconcluded`)
)
print(Inve)
dA <- ggplot(df, aes(`Total%ofInterventionsachieved-premisesratedA`))+geom_histogram(aes(fill=LAType), colour="black", binwidth = 2)+
labs(x="% of Interventions Achieved (Rated A)") +
theme(legend.position = 'hidden')
dB <- ggplot(df, aes(`Total%ofInterventionsachieved-premisesratedB`))+geom_histogram(aes(fill=LAType), colour="black", binwidth = 2)+
labs(x="% of Interventions Achieved (Rated B)") +
theme(legend.position = 'hidden')
dC <- ggplot(df, aes(`Total%ofInterventionsachieved-premisesratedC`))+geom_histogram(aes(fill=LAType), colour="black", binwidth = 2)+
labs(x="% of Interventions Achieved (Rated C)") +
theme(legend.position = 'hidden')
dD <- ggplot(df, aes(`Total%ofInterventionsachieved-premisesratedD`))+geom_histogram(aes(fill=LAType), colour="black", binwidth = 2)+
labs(x="% of Interventions Achieved (Rated D)") +
theme(legend.position = 'hidden')
dE <- ggplot(df, aes(`Total%ofInterventionsachieved-premisesratedE`))+geom_histogram(aes(fill=LAType), colour="black", binwidth = 2)+
labs(x="% of Interventions Achieved (Rated E)") +
theme(legend.position = 'hidden')
grid.arrange(dA,dB,dC,dD,dE,nrow=3,top = "Individual Impact Level(A-E) Distribution")
ggarrange(dA,dB,dC,dD,dE,common.legend = TRUE,top = "Individual Impact Level(A-E) Distribution")
ggarrange(dA,dB,dC,dD,dE,common.legend = TRUE,nrow = 3,top = "Individual Impact Level(A-E) Distribution")
ggarrange(dA,dB,dC,dD,dE,common.legend = TRUE,top = "Individual Impact Level(A-E) Distribution")
dA <- ggplot(df, aes(`Total%ofInterventionsachieved-premisesratedA`))+geom_histogram(aes(fill=LAType), colour="black", binwidth = 2)+
labs(x="% of Interventions Achieved (Rated A)") +
theme(legend.position = 'hidden')
dB <- ggplot(df, aes(`Total%ofInterventionsachieved-premisesratedB`))+geom_histogram(aes(fill=LAType), colour="black", binwidth = 2)+
labs(x="% of Interventions Achieved (Rated B)") +
theme(legend.position = 'hidden')
dC <- ggplot(df, aes(`Total%ofInterventionsachieved-premisesratedC`))+geom_histogram(aes(fill=LAType), colour="black", binwidth = 2)+
labs(x="% of Interventions Achieved (Rated C)") +
theme(legend.position = 'hidden')
dD <- ggplot(df, aes(`Total%ofInterventionsachieved-premisesratedD`))+geom_histogram(aes(fill=LAType), colour="black", binwidth = 2)+
labs(x="% of Interventions Achieved (Rated D)") +
theme(legend.position = 'hidden')
dE <- ggplot(df, aes(`Total%ofInterventionsachieved-premisesratedE`))+geom_histogram(aes(fill=LAType), colour="black", binwidth = 2)+
labs(x="% of Interventions Achieved (Rated E)") +
theme(legend.position = 'hidden')
grid.arrange(dA,dB,dC,dD,dE,nrow=3,top = "Individual Impact Level(A-E) Distribution")
ggarrange(dA,dB,dC,dD,dE,common.legend = TRUE,top = "Individual Impact Level(A-E) Distribution")
x <- rcorr(as.matrix(select(df, `Total%ofInterventionsachieved(premisesratedA-E)`, `ProfessionalFullTimeEquivalentPosts-occupied *`)))
print(x)
FTE_DC <- cor(df_DC$`Total%ofInterventionsachieved(premisesratedA-E)`,df_DC$`ProfessionalFullTimeEquivalentPosts-occupied *`)
FTE_LB <- cor(df_LB$`Total%ofInterventionsachieved(premisesratedA-E)`,df_LB$`ProfessionalFullTimeEquivalentPosts-occupied *`)
FTE_MBC <- cor(df_MBC$`Total%ofInterventionsachieved(premisesratedA-E)`,df_MBC$`ProfessionalFullTimeEquivalentPosts-occupied *`)
FTE_NUA <- cor(df_NUA$`Total%ofInterventionsachieved(premisesratedA-E)`,df_NUA$`ProfessionalFullTimeEquivalentPosts-occupied *`)
FTE_UA <- cor(df_UA$`Total%ofInterventionsachieved(premisesratedA-E)`,df_UA$`ProfessionalFullTimeEquivalentPosts-occupied *`)
FTE_WUA <- cor(df_WUA$`Total%ofInterventionsachieved(premisesratedA-E)`,df_WUA$`ProfessionalFullTimeEquivalentPosts-occupied *`)
print(data.frame(FTE_DC,FTE_LB,FTE_MBC,FTE_NUA,FTE_UA,FTE_WUA))
cbind(coefficient=coef(model_overall), confint(model_overall))
print(summary(model_DC))
cbind(coefficient=coef(model_DC), confint(model_DC))
print(summary(model_LB))
cbind(coefficient=coef(model_LB), confint(model_LB))
print(summary(model_MBC))
cbind(coefficient=coef(model_MBC), confint(model_MBC))
print(summary(model_NUA))
cbind(coefficient=coef(model_NUA), confint(model_NUA))
print(summary(model_UA))
cbind(coefficient=coef(model_UA), confint(model_UA))
print(summary(model_WUA))
cbind(coefficient=coef(model_WUA), confint(model_WUA))
print(Estab)
ggplotly(plot1)
plot1 <- ggplot(df, aes(`Total%ofBroadlyCompliantestablishmentsratedA-E`))+geom_histogram(aes(fill= Country), colour="black", binwidth = 0.3)+labs(x="Total % of BroadlyCompliant Establishments Rated A-E" , title ="Distribution of Establishments under Broadly Complaint")
ggplotly(plot1)
ggplotly(plot1)
print(Inev)
print(Inve)
ggplotly(plot2)
ggarrange(dA,dB,dC,dD,dE,common.legend = TRUE,top = "Individual Impact Level(A-E) Distribution")
book <- read_csv("publisher_sales.csv")
str(book)
#Genre should be of factor datatype instead of character
book$genre <- as.factor(book$genre)
levels(book$genre)
str(book_data)
book_data <- read_csv("publisher_sales.csv")
str(book_data)
#Genre should be of factor datatype instead of character
book$genre <- as.factor(book$genre)
levels(book$genre)
summary(book_data)
Sales.Genre <- df_book %>% group_by(genre) %>%
summarise(average.sales = mean(daily.sales))
df_books <- read_csv("publisher_sales.csv")
str(df_books)
#Genre should be of factor datatype instead of character
book$genre <- as.factor(book$genre)
levels(book$genre)
summary(df_books)
Sales.Genre <- df_book %>% group_by(genre) %>%
summarise(average.sales = mean(daily.sales))
Sales.Genre <- df_books %>% group_by(genre) %>%
summarise(average.sales = mean(daily.sales))
ggplot(Sales.Genre, aes(x=genre, y=average.sales)) +
geom_bar(stat = "identity") +
geom_text(aes(label = average.sales), vjust = -0.2) +
labs(x="Genre of Books", y="Avg Sales", title = "Average e-Book Sales for each Genre ")
bd <- read_csv("publisher_sales.csv")
str(bd)
#Genre should be of factor datatype instead of character
book$genre <- as.factor(book$genre)
levels(book$genre)
summary(bd)
bd <- bd %>% filter(daily_sales > 0)
bd <- bd %>% filter(daily.sales > 0)
summary(bd)
Sales.Genre
ggplot(Sales.Genre, aes(x = genre, y = average.sales)) + geom_col() + geom_text(aes(label = mean), vjust = -0.5) + theme_minimal()
Sales.Genre <- bd %>% group_by(genre) %>%
summarise(average.sales = mean(daily.sales))
ggplot(Sales.Genre, aes(x=genre, y=average.sales)) +
geom_bar(stat = "identity") +
geom_text(aes(label = average.sales), vjust = -0.2) +
labs(x="Genre of Books", y="Avg Sales", title = "Average e-Book Sales for each Genre ")
ggplot(Sales.Genre, aes(x = genre, y = average.sales)) + geom_col() + geom_text(aes(label = average.sales), vjust = -0.5) + theme_minimal()
ggplot(Sales.Genre, aes(x = genre, y = average.sales)) + geom_col() + geom_text(aes(label = average.sales), vjust = -0.5) + theme_minimal()
ggplot(Sales.Genre, aes(x=genre, y=average.sales)) +
geom_bar(stat = "identity") +
geom_text(aes(label = average.sales), vjust = -0.2) +
labs(x="Genre of Books", y="Avg Sales", title = "Average e-Book Sales for each Genre ")
ggplot(Sales.Genre, aes(x=genre, y=average.sales)) +
geom_bar(stat = "identity") +
geom_text(aes(label = average.sales), vjust = -0.5) +
labs(x="Genre of Books", y="Avg Sales", title = "Average e-Book Sales for each Genre ")
ggplot(Sales.Genre, aes(x=genre, y=average.sales)) +
geom_bar(stat = "identity") +
geom_text(aes(label = average.sales), vjust = -0.2) +
labs(x="Genre of Books", y="Avg Sales", title = "Average e-Book Sales for each Genre ")
ggplot(data = booksales, aes(x = sale_price)) + geom_histogram(binwidth = 0.2)
ggplot(data = bd, aes(x = sale_price)) + geom_histogram(binwidth = 0.2)
ggplot(data = bd, aes(x = sale_price)) + geom.histogram(binwidth = 0.2)
ggplot(data = bd, aes(x = sale.price)) + geom_histogram(binwidth = 0.2)
#Plotting graph to show the average reviews for different types of the publishers
ggplot(data = bd, aes(x = avg.review, fill = publisher_type,alpha = 0.1)) + geom_histogram(binwidth = 0.1,position = 'dodge')
ggplot(data = bd, aes(x = sale.price)) + geom_histogram(binwidth = 0.2)
#Plotting graph to show the average reviews for different types of the publishers
ggplot(data = bd, aes(x = avg.review, fill = publisher.type,alpha = 0.1)) + geom_histogram(binwidth = 0.1,position = 'dodge')
rcorr(as.matrix(booksales %>% select(avg_review, daily_sales, total_reviews, sale_price)))
rcorr(as.matrix(bd %>% select(avg.review, daily.sales, total.reviews, sale.price)))
d_genre <- bd %>%
group_by(genre) %>%
do(tidy(lm(daily.sales~sale.price, .)))
library(tidyverse)
d_genre
d_genre <- bd %>%
group_by(genre) %>%
do(tidy(lm(daily.sales~sale.price, .)))
library(tidyverse)
d_genre <- bd %>%
group_by(genre) %>%
do(tidy(lm(daily.sales~sale.price, .)))
grid.arrange(
ggplot(bd, aes(x=daily.sales, y=avg.review)) + geom_point() + geom_smooth() + labs(y="Average Review", x="Daily Sales"),
ggplot(bd, aes(x=daily.sales, y=total.reviews)) + geom_point() + geom_smooth() + labs(y="Total Review", x="Daily Sales"),
ggplot(bd, aes(x=avg.review, y=total.reviews)) + geom_point() + geom_smooth() + labs(y="Total Review", x="Average Review"),
nrow=3, top="Necessary Correlations")
cor_avg <- cor(bd$avg.review,bd$daily.sales)
cor_tot <- cor(bd$total.reviews,bd$daily.sales)
cor_avt <- cor(bd$total.reviews,bd$avg.review)
print(data.frame(cor_avg,cor_tot,cor_avt))
#Performing Multiple Linear Regression to predict the daily sales based on average and total reviews
m1 <- lm(daily.sales ~ avg.review + total.reviews, data = bd)
summary(m1)
cbind(coef(m1),confint(m1))
#Performing Multiple Linear Regression to predict the daily sales based on average and total reviews
m1 <- lm(daily.sales ~ avg.review + total.reviews, data = bd)
summary(m1)
cbind(coef(m1),confint(m1))
bd_null <- bd %>% filter(total.reviews != 0)
m2 <- lm(daily.sales ~ avg.review + total.reviews, data = book_data_new)
bd_null <- bd %>% filter(total.reviews != 0)
m2 <- lm(daily.sales ~ avg.review + total.reviews, data = bd_null)
summary(m2)
cbind(coef(m2),confint(m2))
bd_null <- bd %>% filter(total.reviews != 0)
m2 <- lm(daily.sales ~ avg.review + total.reviews, data = bd_null)
summary(m2)
cbind(coef(m2),confint(m2))
#Correlation between number of sales and sale price
rcorr(as.matrix(select(bd, sale.price, daily.sales)))
ggplot(data = bd, aes(x = daily_sales, y = sale_price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price",title = expression(r == -0.28))
ggplot(data = bd, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price",title = expression(r == -0.28))
#Simple model with just daily.sales as a function of sale.price
ds_sp <- lm(daily.sales ~ sale.price, data = bd)
summary(ds_sp)
#Simple model with just daily.sales as a function of sale.price
ds_sp <- lm(daily.sales ~ sale.price, data = bd)
summary(ds_sp)
cbind(coef(ds_sp),confint(ds_sp))
#Simple model with just daily.sales as a function of sale.price
ds_sp <- lm(daily.sales ~ sale.price, data = bd)
summary(ds_sp)
cbind(coef(ds_sp),confint(ds_sp))
( ds_sp_emm <- emmeans(ds_sp, ~sale.price) )
#Model including genre
g1 <- lm(daily.sales ~ sale.price + genre, data = bd)
( g1.emm <- emmeans(g1, ~sale.price) )
#ANOVA method to compare models
anova(ds_sp, g1)
#Interaction Terms
int <- lm(daily.sales ~ sale.price * genre, data = bd)
summary(int)
anova(ds_sp, g1,int)
ggplot(data = bd, aes(x = sale_price, y = daily_sales, color = genre)) + geom_point(alpha = 0.1) + geom_smooth(method = lm)
ggplot(data = bd, aes(x = sale.price, y = daily.sales, color = genre)) + geom_point(alpha = 0.1) + geom_smooth(method = lm)
#Different genres data frame
c <- booksales %>% filter(genre == 'childrens')
#Different genres data frame
c <- bd %>% filter(genre == 'childrens')
f <- bd %>% filter(genre == 'fiction')
nf <- bd %>% filter(genre == 'non_fiction')
#Different genres data frame
c <- bd %>% filter(genre == 'childrens')
f <- bd %>% filter(genre == 'fiction')
nf <- bd %>% filter(genre == 'non_fiction')
k1 <- ggplot(data = c, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price")
k2 <- ggplot(data =fc, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price")
#Different genres data frame
c <- bd %>% filter(genre == 'childrens')
f <- bd %>% filter(genre == 'fiction')
nf <- bd %>% filter(genre == 'non_fiction')
k1 <- ggplot(data = c, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price")
k2 <- ggplot(data =f, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price")
k3 <- ggplot(data = nf, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price")
#Different genres data frame
c <- bd %>% filter(genre == 'childrens')
f <- bd %>% filter(genre == 'fiction')
nf <- bd %>% filter(genre == 'non_fiction')
k1 <- ggplot(data = c, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price")
k2 <- ggplot(data =f, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price")
k3 <- ggplot(data = nf, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price")
grid.arrange(k1,k2,k3, ncol=3)
#Different genres data frame
c <- bd %>% filter(genre == 'childrens')
f <- bd %>% filter(genre == 'fiction')
nf <- bd %>% filter(genre == 'non_fiction')
k1 <- ggplot(data = c, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price", title = Children)
k1 <- ggplot(data = c, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price", title (Children))
k1 <- ggplot(data = c, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price", title ('Children'))
k1 <- ggplot(data = c, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price", title ='Children')
#Different genres data frame
c <- bd %>% filter(genre == 'childrens')
f <- bd %>% filter(genre == 'fiction')
nf <- bd %>% filter(genre == 'non_fiction')
k1 <- ggplot(data = c, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price", title ='Children')
k2 <- ggplot(data =f, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price",title = "Fiction")
k3 <- ggplot(data = nf, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price",title="Non-Fiction")
grid.arrange(k1,k2,k3, ncol=3)
#Correlation between number of sales and sale price
rcorr(as.matrix(select(bd, sale.price, daily.sales)))
#Correlation between number of sales and sale price
rcorr(as.matrix(select(bd, sale.price, daily.sales)))
ggplot(data = bd, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price",title = expression(r == -0.28))
ggplot(data = bd, aes(x = sale.price, y = daily.sales, color = genre)) + geom_point(alpha = 0.1) + geom_smooth(method = lm)
#Different genres data frame
c <- bd %>% filter(genre == 'childrens')
f <- bd %>% filter(genre == 'fiction')
nf <- bd %>% filter(genre == 'non_fiction')
k1 <- ggplot(data = c, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price", title ='Children')
k2 <- ggplot(data =f, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price",title = "Fiction")
k3 <- ggplot(data = nf, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price",title="Non-Fiction")
grid.arrange(k1,k2,k3, ncol=3)
#Simple model with just daily.sales as a function of sale.price
ds_sp <- lm(daily.sales ~ sale.price, data = bd)
summary(ds_sp)
cbind(coef(ds_sp),confint(ds_sp))
( ds_sp_emm <- emmeans(ds_sp, ~sale.price) )
#Model including genre
g1 <- lm(daily.sales ~ sale.price + genre, data = bd)
( g1.emm <- emmeans(g1, ~sale.price) )
#ANOVA method to compare models
anova(ds_sp, g1)
#Interaction Terms
int <- lm(daily.sales ~ sale.price * genre, data = bd)
summary(int)
anova(ds_sp, g1,int)
x <- rcorr(as.matrix(select(df, `Total%ofInterventionsachieved(premisesratedA-E)`, `ProfessionalFullTimeEquivalentPosts-occupied *`)))
print(x)
ggplot(df, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=`ProfessionalFullTimeEquivalentPosts-occupied *`)) + geom_point() + geom_smooth() + labs(y="Employees", x="Successful Interventions")
ggplot(df, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=`ProfessionalFullTimeEquivalentPosts-occupied *`)) + geom_point() + geom_smooth() + labs(y="Employees", x="Successful Interventions")
print(x)
ggplot(df, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=`ProfessionalFullTimeEquivalentPosts-occupied *`)) + geom_point() + geom_smooth() + labs(y="Employees", x="Successful Interventions")
print(x)
ggplot(df, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=`ProfessionalFullTimeEquivalentPosts-occupied *`)) + geom_point() + geom_smooth() + labs(y="Employees", x="Successful Interventions")
model_overall <- lm(`Total%ofInterventionsachieved(premisesratedA-E)`~`ProfessionalFullTimeEquivalentPosts-occupied *`, data = df)
summary(model_overall)
c1 <- ggplot(df_DC, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=`ProfessionalFullTimeEquivalentPosts-occupied *`)) + geom_point() + geom_smooth() + labs(y="Employees", x="Successful Interventions at DC")
c2 <- ggplot(df_LB, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=`ProfessionalFullTimeEquivalentPosts-occupied *`)) + geom_point() + geom_smooth() + labs(y="Employees", x="Successful Interventions at LB")
c3 <- ggplot(df_MBC, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=`ProfessionalFullTimeEquivalentPosts-occupied *`)) + geom_point() + geom_smooth() + labs(y="Employees", x="Successful Interventions at MBC")
c4 <- ggplot(df_NUA, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=`ProfessionalFullTimeEquivalentPosts-occupied *`)) + geom_point() + geom_smooth() + labs(y="Employees", x="Successful Interventions at NUA")
c5 <- ggplot(df_UA, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=`ProfessionalFullTimeEquivalentPosts-occupied *`)) + geom_point() + geom_smooth() + labs(y="Employees", x="Successful Interventions at UA")
c6 <- ggplot(df_WUA, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=`ProfessionalFullTimeEquivalentPosts-occupied *`)) + geom_point() + geom_smooth() + labs(y="Employees", x="Successful Interventions at WUA")
grid.arrange(c1,c2,c3,c4,c5,c6,nrow=3,top = "Employee Relation at Each Local Authority")
c7 <- ggplot(df_DC, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=Proportion_emp_est)) + geom_point() + geom_smooth() + labs(y="Proportion", x="Successful Interventions DC")
c8 <- ggplot(df_LB, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=Proportion_emp_est)) + geom_point() + geom_smooth() + labs(y="Proportion", x="Successful Interventions LB")
c9 <- ggplot(df_MBC, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=Proportion_emp_est)) + geom_point() + geom_smooth() + labs(y="Proportion", x="Successful Interventions MBC")
c10 <- ggplot(df_NUA, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=Proportion_emp_est)) + geom_point() + geom_smooth() + labs(y="Proportion", x="Successful Interventions NUA")
c11 <- ggplot(df_UA, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=Proportion_emp_est)) + geom_point() + geom_smooth() + labs(y="Proportion", x="Successful Interventions UA")
c12 <- ggplot(df_WUA, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=Proportion_emp_est)) + geom_point() + geom_smooth() + labs(y="Proportion", x="Successful Interventions WUA")
grid.arrange(c7,c8,c9,c10,c11,c12,nrow=3,top = "Propption of Employee at Each Local Authority")
grid.arrange(c7,c8,c9,c10,c11,c12,nrow=3,top = "Propption of Employee at Each Local Authority")
bd <- read_csv("publisher_sales.csv")
str(bd)
#Genre should be of factor datatype instead of character
book$genre <- as.factor(book$genre)
levels(book$genre)
summary(bd)
bd <- bd %>% filter(daily.sales > 0)
summary(bd)
ggplot(data = bd, aes(x = sale.price)) + geom_histogram(binwidth = 0.2)
#Plotting graph to show the average reviews for different types of the publishers
ggplot(data = bd, aes(x = avg.review, fill = publisher.type,alpha = 0.1)) + geom_histogram(binwidth = 0.1,position = 'dodge')
Sales.Genre <- bd %>% group_by(genre) %>%
summarise(average.sales = mean(daily.sales))
ggplot(Sales.Genre, aes(x=genre, y=average.sales)) +
geom_bar(stat = "identity") +
geom_text(aes(label = average.sales), vjust = -0.2) +
labs(x="Genre of Books", y="Avg Sales", title = "Average e-Book Sales for each Genre ")
Sales.Genre
ggplot(Sales.Genre, aes(x=genre, y=average.sales)) +
geom_bar(stat = "identity") +
geom_text(aes(label = average.sales), vjust = -0.2) +
labs(x="Genre of Books", y="Avg Sales", title = "Average e-Book Sales for each Genre ")
print(Sales.Genre)
grid.arrange(
ggplot(bd, aes(x=daily.sales, y=avg.review)) + geom_point() + geom_smooth() + labs(y="Average Review", x="Daily Sales"),
ggplot(bd, aes(x=daily.sales, y=total.reviews)) + geom_point() + geom_smooth() + labs(y="Total Review", x="Daily Sales"),
ggplot(bd, aes(x=avg.review, y=total.reviews)) + geom_point() + geom_smooth() + labs(y="Total Review", x="Average Review"),
nrow=3, top="Necessary Correlations")
grid.arrange(
ggplot(bd, aes(x=daily.sales, y=avg.review)) + geom_point() + geom_smooth() + labs(y="Average Review", x="Daily Sales"),
ggplot(bd, aes(x=daily.sales, y=total.reviews)) + geom_point() + geom_smooth() + labs(y="Total Review", x="Daily Sales"),
ggplot(bd, aes(x=avg.review, y=total.reviews)) + geom_point() + geom_smooth() + labs(y="Total Review", x="Average Review"),
nrow=3, top="Necessary Correlations")
cor_avg <- cor(bd$avg.review,bd$daily.sales)
cor_tot <- cor(bd$total.reviews,bd$daily.sales)
cor_avt <- cor(bd$total.reviews,bd$avg.review)
print(data.frame(cor_avg,cor_tot,cor_avt))
cor_avd <- cor(bd$avg.review,bd$daily.sales)
cor_tvd <- cor(bd$total.reviews,bd$daily.sales)
cor_avt <- cor(bd$total.reviews,bd$avg.review)
print(data.frame(cor_avd,cor_tvd,cor_avt))
summary(m2)
cbind(coef(m2),confint(m2))
summary(m1)
cbind(coef(m1),confint(m1))
#Correlation between number of sales and sale price
rcorr(as.matrix(select(bd, sale.price, daily.sales)))
ggplot(data = bd, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price",title = expression(r == -0.28))
ggplot(data = bd, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price",title = expression(r == -0.28))
ggplot(data = bd, aes(x = sale.price, y = daily.sales, color = genre)) + geom_point(alpha = 0.1) + geom_smooth(method = lm)
( ds_sp_emm <- emmeans(ds_sp, ~sale.price) )
print(summary(ds_sp))
print(cbind(coef(ds_sp),confint(ds_sp)))
print(( ds_sp_emm <- emmeans(ds_sp, ~sale.price) ))
ggplot(data = bd, aes(x = sale.price, y = daily.sales, color = genre)) + geom_point(alpha = 0.1) + geom_smooth(method = lm)
#Different genres data frame
c <- bd %>% filter(genre == 'childrens')
f <- bd %>% filter(genre == 'fiction')
nf <- bd %>% filter(genre == 'non_fiction')
k1 <- ggplot(data = c, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price", title ='Children')
k2 <- ggplot(data =f, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price",title = "Fiction")
k3 <- ggplot(data = nf, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price",title="Non-Fiction")
grid.arrange(k1,k2,k3, ncol=3)
grid.arrange(k1,k2,k3, ncol=3)
print(summary(ds_sp))
print(cbind(coef(ds_sp),confint(ds_sp)))
print(( ds_sp_emm <- emmeans(ds_sp, ~sale.price) ))
#Model including genre
g1 <- lm(daily.sales ~ sale.price + genre, data = bd)
( g1.emm <- emmeans(g1, ~sale.price) )
#ANOVA method to compare models
anova(ds_sp, g1)
#Interaction Terms
int <- lm(daily.sales ~ sale.price * genre, data = bd)
summary(int)
anova(ds_sp, g1,int)
x <- rcorr(as.matrix(select(df, `Total%ofInterventionsachieved(premisesratedA-E)`, `ProfessionalFullTimeEquivalentPosts-occupied *`)))
print(x)
ggplot(df, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=`ProfessionalFullTimeEquivalentPosts-occupied *`)) + geom_point() + geom_smooth() + labs(y="Employees", x="Successful Interventions")
# Linear Regression
model_overall <- lm(`Total%ofInterventionsachieved(premisesratedA-E)`~`ProfessionalFullTimeEquivalentPosts-occupied *`, data = df)
# Linear Regression
model_overall <- lm(`Total%ofInterventionsachieved(premisesratedA-E)`~`ProfessionalFullTimeEquivalentPosts-occupied *`, data = df)
#output of Linear Regression
summary(model_overall)
cbind(coefficient=coef(model_overall), confint(model_overall))
# Creating a Grid of Correlation coeffecients
c1 <- ggplot(df_DC, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=`ProfessionalFullTimeEquivalentPosts-occupied *`)) + geom_point() + geom_smooth() + labs(y="Employees", x="Successful Interventions at DC")
c2 <- ggplot(df_LB, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=`ProfessionalFullTimeEquivalentPosts-occupied *`)) + geom_point() + geom_smooth() + labs(y="Employees", x="Successful Interventions at LB")
c3 <- ggplot(df_MBC, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=`ProfessionalFullTimeEquivalentPosts-occupied *`)) + geom_point() + geom_smooth() + labs(y="Employees", x="Successful Interventions at MBC")
c4 <- ggplot(df_NUA, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=`ProfessionalFullTimeEquivalentPosts-occupied *`)) + geom_point() + geom_smooth() + labs(y="Employees", x="Successful Interventions at NUA")
c5 <- ggplot(df_UA, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=`ProfessionalFullTimeEquivalentPosts-occupied *`)) + geom_point() + geom_smooth() + labs(y="Employees", x="Successful Interventions at UA")
c6 <- ggplot(df_WUA, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=`ProfessionalFullTimeEquivalentPosts-occupied *`)) + geom_point() + geom_smooth() + labs(y="Employees", x="Successful Interventions at WUA")
grid.arrange(c1,c2,c3,c4,c5,c6,nrow=3,top = "Employee Relation at Each Local Authority")
print(x)
ggplot(df, aes(x=`Total%ofInterventionsachieved(premisesratedA-E)`, y=`ProfessionalFullTimeEquivalentPosts-occupied *`)) + geom_point() + geom_smooth() + labs(y="Employees", x="Successful Interventions")
grid.arrange(c1,c2,c3,c4,c5,c6,nrow=3,top = "Employee Relation at Each Local Authority")
# Creating a Correlation Table for Proportion of employees to Successful Interventions
FTE_PDC <- cor(df_DC$`Total%ofInterventionsachieved(premisesratedA-E)`,df_DC$Proportion_emp_est)
FTE_PLB <- cor(df_LB$`Total%ofInterventionsachieved(premisesratedA-E)`,df_LB$Proportion_emp_est)
FTE_PMBC <- cor(df_MBC$`Total%ofInterventionsachieved(premisesratedA-E)`,df_MBC$Proportion_emp_est)
FTE_PNUA <- cor(df_NUA$`Total%ofInterventionsachieved(premisesratedA-E)`,df_NUA$Proportion_emp_est)
FTE_PUA <- cor(df_UA$`Total%ofInterventionsachieved(premisesratedA-E)`,df_UA$Proportion_emp_est)
FTE_PWUA <- cor(df_WUA$`Total%ofInterventionsachieved(premisesratedA-E)`,df_WUA$Proportion_emp_est)
print(data.frame(FTE_PDC,FTE_PLB,FTE_PMBC,FTE_PNUA,FTE_PUA,FTE_PWUA))
grid.arrange(c7,c8,c9,c10,c11,c12,nrow=3,top = "Propption of Employee at Each Local Authority")
#Omitting negative values
bd <- bd %>% filter(daily.sales > 0)
summary(bd)
ggplot(data = bd, aes(x = sale.price)) + geom_histogram(binwidth = 0.2)
#Plotting graph to show the average reviews for different types of the publishers
ggplot(data = bd, aes(x = avg.review, fill = publisher.type,alpha = 0.1)) + geom_histogram(binwidth = 0.1,position = 'dodge')
rcorr(as.matrix(bd %>% select(avg.review, daily.sales, total.reviews, sale.price)))
grid.arrange(
ggplot(bd, aes(x=daily.sales, y=avg.review)) + geom_point() + geom_smooth() + labs(y="Average Review", x="Daily Sales"),
ggplot(bd, aes(x=daily.sales, y=total.reviews)) + geom_point() + geom_smooth() + labs(y="Total Review", x="Daily Sales"),
ggplot(bd, aes(x=avg.review, y=total.reviews)) + geom_point() + geom_smooth() + labs(y="Total Review", x="Average Review"),
nrow=3, top="Necessary Correlations")
cor_avd <- cor(bd$avg.review,bd$daily.sales)
cor_tvd <- cor(bd$total.reviews,bd$daily.sales)
cor_avt <- cor(bd$total.reviews,bd$avg.review)
print(data.frame(cor_avd,cor_tvd,cor_avt))
#Performing Multiple Linear Regression to predict the daily sales based on average and total reviews
m1 <- lm(daily.sales ~ avg.review + total.reviews, data = bd)
summary(m1)
cbind(coef(m1),confint(m1))
ggplot(data = bd, aes(x = sale.price, y = daily.sales, color = genre)) + geom_point(alpha = 0.1) + geom_smooth(method = lm)
# Sales Price VS Daily Sales Graph
ggplot(data = bd, aes(x = sale.price, y = daily.sales, color = genre)) + geom_point(alpha = 0.1) + geom_smooth(method = lm)
#Different genres data frame
c <- bd %>% filter(genre == 'childrens')
f <- bd %>% filter(genre == 'fiction')
nf <- bd %>% filter(genre == 'non_fiction')
k1 <- ggplot(data = c, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price", title ='Children')
k2 <- ggplot(data =f, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price",title = "Fiction")
k3 <- ggplot(data = nf, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price",title="Non-Fiction")
grid.arrange(k1,k2,k3, ncol=3)
#Different genres data frame
c <- bd %>% filter(genre == 'childrens')
f <- bd %>% filter(genre == 'fiction')
nf <- bd %>% filter(genre == 'non_fiction')
k1 <- ggplot(data = c, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price", title ='Children')
k2 <- ggplot(data =f, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price",title = "Fiction")
k3 <- ggplot(data = nf, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price",title="Non-Fiction")
grid.arrange(k1,k2,k3, ncol=3)
#Output of Model
print(summary(ds_sp))
print(cbind(coef(ds_sp),confint(ds_sp)))
print(( ds_sp_emm <- emmeans(ds_sp, ~sale.price) ))
#Simple model with just daily.sales as a function of sale.price
ds_sp <- lm(daily.sales ~ sale.price, data = bd)
#Model including genre
g1 <- lm(daily.sales ~ sale.price + genre, data = bd)
( g1.emm <- emmeans(g1, ~sale.price) )
#ANOVA method to compare models
anova(ds_sp, g1)
#Simple model with just daily.sales as a function of sale.price
ds_sp <- lm(daily.sales ~ sale.price, data = bd)
#Output of Model
print(summary(ds_sp))
print(cbind(coef(ds_sp),confint(ds_sp)))
print(( ds_sp_emm <- emmeans(ds_sp, ~sale.price) ))
#Model including genre
g1 <- lm(daily.sales ~ sale.price + genre, data = bd)
( g1.emm <- emmeans(g1, ~sale.price) )
#ANOVA method to compare models
anova(ds_sp, g1)
#Interaction Terms
int <- lm(daily.sales ~ sale.price * genre, data = bd)
summary(int)
anova(ds_sp, g1,int)
ggplot(Sales.Genre, aes(x=genre, y=average.sales)) +
geom_bar(stat = "identity") +
geom_text(aes(label = average.sales), vjust = -0.2) +
labs(x="Genre of Books", y="Avg Sales", title = "Average e-Book Sales for each Genre ")
ggplot(data = bd, aes(x = daily.sales, y = sale.price)) + geom_point() + geom_smooth(method = lm) + labs(x= "Daily Sales", y = "Sales Price",title = expression(r == -0.28))
print(summary(ds_sp))
print(cbind(coef(ds_sp),confint(ds_sp)))
print(( ds_sp_emm <- emmeans(ds_sp, ~sale.price) ))
